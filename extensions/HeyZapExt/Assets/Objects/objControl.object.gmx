<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT

HeyZap_Publisher_ID =  "57abcbbe6c246d022e9f927b3b6cf80f";
// paste your Heyzap publiher ID

HeyZap_Mode = 0;
// 0 - normal mode (auto fetch enabled)
// 1 - test mode
// 2 - normal mode (auto fetch disabled)
// 3 - amazon ads (android only)

HeyZap_Init(HeyZap_Publisher_ID,HeyZap_Mode);

global.coins = 0;
global.banner_width = 0;
global.banner_height = 0;

draw_set_halign(fa_center);
draw_set_valign(fa_middle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CALLBACKS

show_debug_message("GM Social Async Event...");

var type = string(ds_map_find_value(async_load, "type"));
var value = ds_map_find_value(async_load, "value");

if (type == "heyzap_ad_loaded") {
    HeyZap_Ad_Loaded(value);
} else if (type == "heyzap_ad_shown") {
    HeyZap_Ad_Shown(value);
} else if (type == "heyzap_ad_hidden") {
    HeyZap_Ad_Hidden();
} else if (type == "heyzap_ad_clicked") {
    HeyZap_Ad_Clicked();
} else if (type == "heyzap_video_loaded") {
    HeyZap_Video_Loaded(value);
} else if (type == "heyzap_video_shown") {
    HeyZap_Video_Shown(value);
} else if (type == "heyzap_video_hidden") {
    HeyZap_Video_Hidden();
} else if (type == "heyzap_video_clicked") {
    HeyZap_Video_Clicked();
} else if (type == "heyzap_reward_loaded") {
    HeyZap_Reward_Loaded(value);
} else if (type == "heyzap_reward_shown") {
    HeyZap_Reward_Shown(value);
} else if (type == "heyzap_reward_hidden") {
    HeyZap_Reward_Hidden();
} else if (type == "heyzap_reward_clicked") {
    HeyZap_Reward_Clicked();
} else if (type == "heyzap_reward") {
    HeyZap_Get_Reward(value);
} else if (type == "heyzap_banner_loaded") {
    HeyZap_Banner_Loaded(value);
} else if (type == "heyzap_banner_clicked") {
    HeyZap_Banner_Clicked();
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_text(room_width/2, objLoadReward.y+60, "Banner Size: "+string(global.banner_width)+"x"+string(global.banner_height));

draw_set_color(c_yellow);
draw_text(room_width/2, objLoadReward.y+35, "COINS: "+string(global.coins));

// Interstitials Status
if (HeyZap_InterstitialStatus()) {
    draw_set_color(c_green);
    draw_text(room_width/2, objLoadInterstitial.y, "Interstitial#LOADED!");
} else {
    draw_set_color(c_red);
    draw_text(room_width/2, objLoadInterstitial.y, "Interstitial#NOT READY");
}

// Video Status
if (HeyZap_VideoStatus()) {
    draw_set_color(c_green);
    draw_text(room_width/2, objLoadVideo.y, "Video#LOADED");
} else {
    draw_set_color(c_red);
    draw_text(room_width/2, objLoadVideo.y, "Video#NOT READY!");
}

// Reward Video Status
if (HeyZap_RewardStatus()) {
    draw_set_color(c_green);
    draw_text(room_width/2, objLoadReward.y, "Reward Video#LOADED");
} else {
    draw_set_color(c_red);
    draw_text(room_width/2, objLoadReward.y, "Reward Video#NOT READY!");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
