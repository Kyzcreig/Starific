<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Drop in the room you want frame skipping to work.
//If you want to enable frame skipping and disable frame skipping, use a controller object that will create
// this object and destroy this object when needed
//Make the object invisible if you dont want to see the debug output


//Changes for 2.0.0
//The skip now goes from no skip to skip every other frame
//as it is the anly skip factor that shows not visual jitter
//the origial object is still available as TMC_FrameSkipOld_obj
//this new object is more responsive to change and requires no tweaking
//tested on Windows and Android at 30, 60, 90 fps

draw_enabled = true;
skip_frame = false;
debug_txt = "";
frame_at = 0;
start_t = get_timer();
numvals = room_speed*5;
first_time = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>skip_frame = false;
draw_enabled = true;
draw_enable_drawevent(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(first_time)
{
    skip_frame = false;
    frame_at = 0;
    valat = 0;
    repeat(numvals)
    {
       vals[valat] = 0; //expected average;
       valat++;
    }
    valat = 0;
    draw_enabled = true;
    draw_enable_drawevent(1);
    first_time = false;
    start_t = get_timer();
}
if(skip_frame == false)
{
    deviation = 1/60 * room_speed
    end_t = get_timer();
    delta_t = end_t-start_t;
    
    
    vals[valat] =  delta_t; //the value for this frame, added to rotary table
    //if(delta_t*room_speed &gt;(1000000))
    {
        vals[valat] *=(delta_t*(room_speed-deviation)) / (1000000); //give it more weight for faster switching to skipping
    }
    //increase rotary reference
    valat++;
    valat= valat mod numvals; //rotary reference index 0,1,2,3,....299,0,1,2,3,4...299
    
    //average
    var avg = 0;
    var at = 0;
    repeat(numvals)
    {
       avg += vals[at]; //add to average var
       at++;
    }
    avg/=numvals; //average
    
    draw_enabled = (avg*(room_speed-deviation)) &lt;(1000000)
    //draw_enabled = false;
    debug_txt = "FPS/ROOM_SPEED/FPS REAL:#" + string(fps) +"/" +string(room_speed)+ "/" + string(floor(fps_real));;
    debug_txt += "#Cost: " + string(avg*room_speed/1000000)+"/1";
    debug_txt += "#SKIP: " + string( !draw_enabled);
    

}

skip_frame = false;
draw_enable_drawevent(1);
        

if(draw_enabled == false)
{
    if((frame_at mod 2) == 1) 
    {
        skip_frame = true;
        draw_enable_drawevent(0);

    }

}
//inc frame at
frame_at++;
if(skip_frame == false) 
    start_t = get_timer();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>first_time = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>first_time = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_color(c_black)
draw_text(10,10,debug_txt);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
