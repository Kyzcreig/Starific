<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Drop in the room you want frame skipping to work.
//If you want to enable frame skipping and disable frame skipping, use a controller object that will create
// this object and destroy this object when needed
//Make the object invisible if you dont want to see the debug output

//This object is depricated
//Changes for 2.0.0
//The skip now goes from no skip to skip every other frame
//as it is the anly skip factor that shows not visual jitter
//the origial object is still available as TMC_FrameSkipOld_obj

//Changes for 1.0.3
//Fixed deadlock which was introduced in 1.0.1
//fixed the skip to be more evenly distributed
//moved the debug fps string to be calculated in end STEP
//added an moving object in the demo for a more visual feedback
//modified the delay to only apply on room change

//Changes for 1.0.2
//Added destroy event to reset the draw so you can create and destroy the object to turn on or off the feature
//tweaked the number of fps entried for faster swithing
//added more detailed demo

//Changes for 1.0.1
//Added delay of detection for 2 seconds to prevent false detection of low frame rate
//Fixed a skip bug, when a skip would happen once every second even though the fps was decent
//made code compatible with persistent option if you choose to set the persistent flag of the object
//create
room_start =false;
debug_txt = "";
event_user(0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_enabled = true;
draw_enable_drawevent(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//endstep

//delay the check for 2 seconds
if(get_timer()-start_t &lt; 2000000) exit;

vals[valat] =  fps; //the value for this frame, added to rotary table
//increase rotary reference
valat++;
valat= valat mod numvals; //rotary reference index 0,1,2,3,....299,0,1,2,3,4...299

//average
var avg = 0;
var at = 0;
repeat(numvals)
{
   avg += vals[at]; //add to average var
   at++;
}
avg/=numvals; //average


//if lagging or not increase/decrease num frames to skip via skip_every
if(avg&lt;room_speed-2*(room_speed/30)) //&lt;28 for 30, &lt;56 for 60
    skip_every -=.1;
else if(avg=room_speed)
    skip_every +=.025;

skip_every = median(2,skip_every,room_speed+1)
var modval = round(skip_every);
var modat = round(skip_every)-1;
//if the frame fall on a modulo
if((checkat mod modval) == modat &amp;&amp; skip_every&lt;=room_speed) 
{
    draw_enable_drawevent(0);
   
}
else
{
    draw_enable_drawevent(1);
    
}
//inc frame at
checkat++;

debug_txt = "FPS/ROOM_SPEED/FPS REAL:#" + string(fps) +"/" +string(room_speed)+ "/" + string(floor(fps_real));;
debug_txt += "#skip every: " + string( skip_every * (skip_every&lt;=room_speed));




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(room_start)
    start_t = get_timer();
else
    start_t = 0;

numvals = room_speed;
valat = 0;
repeat(numvals)
{
   vals[valat] = room_speed; //expected average;
   valat++;
}
valat = 0;

checkat = 0;
skip_every = room_speed+1; //default 1 more than max


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_enabled = true;
draw_enable_drawevent(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_start =true;
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black)
draw_text(10,10,debug_txt);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
