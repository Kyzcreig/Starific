<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_settings_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display Settings Page


title_txt = "display";



//Test Sound Stuff
TEST_SOUND = sd_collide_with_paddle;
TESTING_SOUND[0] = false;



//Toggle Sprites
music_spr[0] = s_v_music_off;
music_spr[1] = s_v_music_on;
sfx_spr[0] = s_v_volume_off;
sfx_spr[1] = s_v_volume_on;

// FPS Names
var i = -1;
fps_names[++i] = "low";
fps_names[++i] = "high";


// VFX Names
var i = -1;
vfx_names[++i] = "low";
vfx_names[++i] = "high";

// Toggle Sprites
toggler_sprite[0] = spr_toggle_off;
toggler_sprite[1] = spr_toggle_on;

var i;
i = -1; 
// Set Game Settings Items
menu[++i] = scr_create_array("fps", 1, -1, 1); //name, type, subtype, userevent
menu[++i] = scr_create_array("vfx", 1, -3, 2); //name, type, subtype, userevent
menu[++i] = scr_create_array("music", 2, 0, 3); //name, type, subtype, userevent
menu[++i] = scr_create_array("sound", 2, 1, 4); //name, type, subtype, userevent
if EVERYPLAY_ENABLED {
    menu[++i] = scr_create_array("record", 3, 0, 5); //name, type, subtype, userevent
}


// Menu Selection Vars
selected[0] = noone;
selected[1] = true;

// Adjustor for Arrow Indexes
ADJUST = 0;



/// Fonts
NameFont = fnt_menu_bn_26_italic 
DescriptionFont = fnt_menu_bn_15_italic
CountsFont = fnt_menu_bn_26_black






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup Display Settings

//NB: Keep this above the inherited event

// Save Sliders
ini_open("scores.ini")
    ini_write_real("settings", "music_volume", music_sound[0]);
    ini_write_real("settings", "sfx_volume", sfx_sound[0]);
ini_close();
    //NB: we do this here to avoid i/o in the step event
    
  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display Settings Choices


switch selected[0]
{

    //Arrow FPS
    case 1:
        // Get New FPS
        RMSPD_OPT_INDEX = scr_modular_delta(RMSPD_OPT_INDEX, ADJUST, 
                                array_length_1d(RMSPD_OPTIONS));
    
        
        
        // Save FPS Settings
        ini_open("savedata.ini"); //NB: Savedata filename
           ini_write_real("settings", "RMSPD_OPT_INDEX", RMSPD_OPT_INDEX);
        ini_close();
  
        // Track FPS Selection
        analytics_button_counter("Options-FPS", "FPS,"+string(RMSPD_OPTIONS[RMSPD_OPT_INDEX]));
        
            
        selected[@ 0] = noone;
        break;
        
        
    //Arrow Particle Opacity
    case 2:
    
        // Get New VFX
        VFX_LEVEL = scr_modular_delta(VFX_LEVEL, ADJUST, 
                                array_length_1d(vfx_names));

        
        
        // Save FPS Settings
        ini_open("savedata.ini"); //NB: Savedata filename
           ini_write_real("settings", "VFX_LEVEL", VFX_LEVEL);
        ini_close();
  
        // Track FPS Selection
        analytics_button_counter("Options-VFX_LEVEL", "VFX_LEVEL,"+string(VFX_LEVEL));
        
            
        selected[@ 0] = noone;
        break;
             
    //Toggle Music Mute
    case 3:
         //Toggle Sound
         scr_sound_toggle_music()
         
        selected[0] = noone;
        break;
        
    //Toggle SFX Mute
    case 4:
         //Toggle Sound
         scr_sound_toggle_sfx();
    
         selected[0] = noone;
         break;
         
    // Toggle Everyplay Auto Record
    case 5:
        
        // Toggle
        EVERYPLAY_AUTO = !EVERYPLAY_AUTO;
        // Save
        ini_open("savedata.ini");
            ini_write_real("settings", "EVERYPLAY_AUTO", EVERYPLAY_AUTO);
        ini_close();
        
        
        
        selected[0] = noone;
        break;
         
  
   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Page

scr_menu_draw_settings_display()








</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
