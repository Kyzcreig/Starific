<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_particle_dot_bigger</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_blend = COLORS[0]

image_xscale = 0;
image_yscale = 0;

//radius = max(point_distance(x,y,GAME_X,GAME_Y), point_distance(x,y,GAME_X+GAME_W,GAME_Y+GAME_H))
radius = point_distance(x,y,GAME_X+GAME_W,
                       GAME_Y+GAME_H)
dir = irandom(360);
xStart = x;
yStart = y;
xDest = x+lengthdir_x(radius, dir);
yDest = y+lengthdir_y(radius, dir);

// Tween star using an array property
scale[0] = 0;
tweenScale = TweenFire(id, scale, EaseInQuint,
                TWEEN_MODE_ONCE, true, 0, 2, 0, 1.25);
//tweenScale = TweenFire(id, scale, true, EaseInQuint, 2, 0, .75, );

// Set star to be destroyed when tween finishes
TweenAddCallback(tweenScale,TWEEN_EV_FINISH, id, Destroy, id);
TweenSetTime(tweenScale, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
    Use the scaled value in scale[0] (0.0-1.0)
    to scale x/y/image_scale values as needed
    
    This can be more efficient than creating a tween for each value
*/


var _scale = scale[0];

x = lerp(xStart, xDest, _scale);
y = lerp(yStart, yDest, _scale);

image_xscale = _scale;
image_yscale = _scale;

//self destruct when hitting bottom border
if x &lt; GAME_X or 
   x &gt; GAME_X + GAME_W or 
   y &lt; GAME_Y or
   y &gt; GAME_Y + GAME_H{//oy + cellH*(fieldH + railset*2){
   instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>5,5</point>
    <point>5,5</point>
  </PhysicsShapePoints>
</object>
