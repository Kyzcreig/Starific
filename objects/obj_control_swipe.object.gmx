<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_persistent_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Swipe Init
globalvar
SMX,
SMY,
SMXS,
SMYS,
SWIPE,
SWIPE_DUR,
SWIPE_DIR,
SWIPE_DIST,
SWIPE_SPE,
SWIPE_TAP,
SWIPE_BRK;


SMX = 0;
SMY = 0;
SMXS = 0;
SMYS = 0;
SWIPE = false;
SWIPE_DUR = 0;
SWIPE_DIR = 0;
SWIPE_DIST = 0;
SWIPE_SPE = 0;
SWIPE_TAP = false;
SWIPE_BRK = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Swipe Detection


//Reset Taps Each Step
SWIPE_TAP = false;

if mouse_check_button_pressed(mb_left)
or keyboard_check_pressed(vk_enter)
{
    SMXS = mouse_x;
    SMYS = mouse_y;
    SWIPE = true;
    SWIPE_DUR = 0;
    SWIPE_BRK = false;
     
}

//While Swiping
if SWIPE
{
    SMX = mouse_x;
    SMY = mouse_y;
    SWIPE_DUR++;
    //SWIPE_DIR = point_direction(SMXS,SMYS,SMX,SMY);
    SWIPE_DIST = point_distance(SMXS,SMYS,SMX,SMY);
    
    //Set Long Swipe
    if !SWIPE_BRK and SWIPE_DIST &gt; 10 {
        SWIPE_BRK = true
    }
    
    //Release Swipe
    if mouse_check_button_released(mb_left)
    or keyboard_check_released(vk_enter)
    {
        SWIPE = false;
        
        SWIPE_SPE = SWIPE_DIST/SWIPE_DUR; //unused but potentially useful stat
        
        //Not Long Swipe Means a Tap!
        if !SWIPE_BRK {
            SWIPE_TAP = true
        }    
    }
    
    //SWIPE_DUR = 0;
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
