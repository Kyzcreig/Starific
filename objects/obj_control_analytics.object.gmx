<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_persistent_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time_in_room = 0;

current_room = room;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send stats about gamestate up to this point



if os_is_paused(){


    //Send stats since last os_pause
    ana_GP[1] = STEP;
    var params = "playerID"+","+string(global.playerID)+","+
                 "games_started"+","+string(ana_GP[0])+","+
                 "uptime_seconds"+","+string( (ana_GP[1] - ana_GS[1]) / room_speed)+","+
                 "playtime_seconds"+","+string( ana_GP[2] / room_speed )+","+
                 "interstitial_ad_count"+","+string( ana_GP[3] )+","+
                 "gamestart_count"+","+string( ana_GP[4] )
    FlurryAnalytics_SendEventExt( "pause_stats_since_last_os_pause", params);
    //Set GameStart stats //Reset GamePause stats
    ana_GS[0] += ana_GP[0]; ana_GP[0] = 0;
    ana_GS[1] += ana_GP[1];
    ana_GS[2] += ana_GP[2]; ana_GP[2] = 0;
    ana_GS[3] += ana_GP[3]; ana_GP[3] = 0;
    ana_GS[4] += 1;
    
    
    //Send stats since gamestart
    var params = "playerID"+","+string(global.playerID)+","+
                 "games_started"+","+string(ana_GS[0])+","+
                 "uptime_seconds"+","+string( ana_GS[1] / room_speed)+","+
                 "playtime_seconds"+","+string( ana_GS[2] / room_speed )+","+
                 "interstitial_ad_count"+","+string( ana_GS[3] )+","+
                 "os_pause_count"+","+string( ana_GS[4] )
    FlurryAnalytics_SendEventExt( "pause_stats_since_last_gamestart", params);
    
    //NB: If get_timer() counts time while you're paused so I don't use it for this

    
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep track of time spent in each room
time_in_room += 1;
if current_room != room{
   current_room = room;
   time_in_room = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
